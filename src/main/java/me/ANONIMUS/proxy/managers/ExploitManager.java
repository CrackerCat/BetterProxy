package me.ANONIMUS.proxy.managers;

import lombok.Getter;
import me.ANONIMUS.proxy.objects.Exploit;
import org.reflections.Reflections;

import java.util.ArrayList;
import java.util.List;

@Getter
public class ExploitManager {
    private final List<Exploit> exploits = new ArrayList<>();

    public ExploitManager() {
        new Reflections("me.ANONIMUS.proxy.exploits").getSubTypesOf(Exploit.class).forEach(exploit -> {
            try {
                exploits.add(exploit.newInstance());
            } catch (InstantiationException | IllegalAccessException e) {
                e.printStackTrace();
            }
        });
    }

    public Exploit findExploit(String name) {
        return this.exploits.stream().filter(exploit -> exploit.getName().equalsIgnoreCase(name)).findFirst().orElse(null);
    }
}