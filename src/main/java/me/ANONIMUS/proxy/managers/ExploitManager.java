package me.ANONIMUS.proxy.managers;

import lombok.Getter;
import me.ANONIMUS.proxy.objects.Exploit;
import me.ANONIMUS.proxy.objects.Manager;
import me.ANONIMUS.proxy.utils.ReflectionUtil;

@Getter
public class ExploitManager extends Manager<Exploit> {
    public ExploitManager() {
        ReflectionUtil.getClasses("me.ANONIMUS.proxy.exploits", Exploit.class).forEach(exploit -> {
            try {
                elements.add(exploit.newInstance());
            } catch (InstantiationException | IllegalAccessException e) {
                e.printStackTrace();
            }
        });
    }

    public Exploit findExploit(String name) {
        return this.elements.stream().filter(exploit -> exploit.getName().equalsIgnoreCase(name)).findFirst().orElse(null);
    }
}